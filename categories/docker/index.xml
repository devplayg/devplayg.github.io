<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>docker on Developer Playground</title>
    <link>https://devplayg.com/categories/docker/</link>
    <description>Recent content in docker on Developer Playground</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Sat, 29 Jan 2022 00:28:15 +0900</lastBuildDate>
    
	<atom:link href="https://devplayg.com/categories/docker/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Tips for Docker Compose</title>
      <link>https://devplayg.com/tech/docker-compose_tips/</link>
      <pubDate>Sat, 29 Jan 2022 00:28:15 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/docker-compose_tips/</guid>
      <description>Builds, (re)creates, starts, and attaches to containers for a service.
docker-compose up -d  Stops containers and removes containers, networks, volumes, and images created by up.
sudo docker-compose down  Remove containers for services not defined in the Compose file</description>
    </item>
    
    <item>
      <title>윈도우10, Docker Desktop 없이 사용하기</title>
      <link>https://devplayg.com/tech/install-dockerio-on-windows-10-wsl2/</link>
      <pubDate>Fri, 28 Jan 2022 00:00:00 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/install-dockerio-on-windows-10-wsl2/</guid>
      <description>Microsoft Store 에서 Window Terminal 설치
 https://docs.microsoft.com/ko-kr/windows/terminal/install  관리자 권한으로 Window Terminal 실행 후 WSL2 설치명령어 실행
wsl.exe --install dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart  Microsoft Store 에서 필요한 Ubuntu 설치</description>
    </item>
    
    <item>
      <title>Setting up development environments with docker-compose</title>
      <link>https://devplayg.com/tech/config-dev-server-env-with-docker/</link>
      <pubDate>Mon, 07 Dec 2020 00:00:00 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/config-dev-server-env-with-docker/</guid>
      <description>Create network docker network create -d bridge dev-net  Build environment docker-compose.yaml
networks: network1: name: dev-net services: db: image: mariadb:10.3 container_name: db volumes: - /d/data/mariadb/data:/var/lib/mysql - /d/data/mariadb/conf.d:/etc/mysql/conf.d environment: - MYSQL_ROOT_PASSWORD=devplayg12!</description>
    </item>
    
    <item>
      <title>JSON Tips</title>
      <link>https://devplayg.com/tech/json_handling/</link>
      <pubDate>Sat, 28 Nov 2020 00:00:00 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/json_handling/</guid>
      <description>Minifier https://hub.docker.com/r/governmentpaas/json-minify
DockerFile
FROM ruby:2.7-alpine3.11 RUN gem install json-minify -v 0.0.2 --no-document  Build
docker build -t json-minify .  Minify
docker run --rm -v &amp;quot;%CD%&amp;quot;:/app json-minify ruby -rjson -e &amp;quot;puts JSON.</description>
    </item>
    
    <item>
      <title>Docker, Ubuntu 18.04에 설치하기</title>
      <link>https://devplayg.com/tech/docker_installation-on-ubuntu-18.04/</link>
      <pubDate>Sat, 23 May 2020 09:00:00 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/docker_installation-on-ubuntu-18.04/</guid>
      <description>https://docs.docker.com/engine/install/ubuntu/
Docker 설치 apt 패키지 업데이트
$ sudo apt-get update $ sudo apt-get install \ apt-transport-https \ ca-certificates \ curl \ gnupg-agent \ software-properties-common  Docker GPG 키 추가</description>
    </item>
    
    <item>
      <title>Installing and using CentOS 6.10 via Docker</title>
      <link>https://devplayg.com/tech/docker-container_centos-6.10/</link>
      <pubDate>Wed, 01 Jan 2020 18:00:00 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/docker-container_centos-6.10/</guid>
      <description>Pulling and run image in general
$ docker run -it --name c6 centos:6.10 bash  with sharing filesystem
$ docker run -it -v /host/dir:/container/dir --name c6 centos:6.10 bash  with binding container ports to the host</description>
    </item>
    
    <item>
      <title>Installing and using MariaDB 10.3 via Docker</title>
      <link>https://devplayg.com/tech/docker-container_mariadb-10.3/</link>
      <pubDate>Wed, 01 Jan 2020 18:00:00 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/docker-container_mariadb-10.3/</guid>
      <description>https://hub.docker.com/_/mariadb
Pulling and run image from command-line docker run --name db -e MYSQL_ROOT_PASSWORD=YOUR_PASSWORD -e TZ=Asia/Seoul -p 3306:3306 -d mariadb:10.3 --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci   -e MYSQL_ROOT_PASSWORD=YOUR_PASSWORD -e TZ=Asia/Seoul -p 3306:3306 -d mariadb:10.</description>
    </item>
    
    <item>
      <title>Installing and using Ubuntu 18.04 via Docker</title>
      <link>https://devplayg.com/tech/docker_pulling-ubuntu-18.04/</link>
      <pubDate>Wed, 01 Jan 2020 18:00:00 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/docker_pulling-ubuntu-18.04/</guid>
      <description>Pulling and run image in general
docker run -it --name ubt ubuntu:18.04 bash  with sharing filesystem
docker run -it -v /host/dir:/container/dir --name ubt ubuntu:18.04 bash  with binding container ports to the host</description>
    </item>
    
    <item>
      <title>Installing and using other containers via Docker</title>
      <link>https://devplayg.com/tech/docker-container_etc/</link>
      <pubDate>Wed, 01 Jan 2020 18:00:00 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/docker-container_etc/</guid>
      <description> Pulling and run image Apache 2.4
docker run -dit --name web -p 8080:80 -v E:/webhome/:/usr/local/apache2/htdocs/ httpd:2.4  </description>
    </item>
    
    <item>
      <title>Docker tips</title>
      <link>https://devplayg.com/tech/docker_tips/</link>
      <pubDate>Fri, 07 Jun 2019 00:28:15 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/docker_tips/</guid>
      <description>Commands docker info docker logs [name] docker exec -it [name] bash  My favorites on Windows Ubuntu 18.04
docker run -dit --name ubt -v e:/gohome:/gohome ubuntu:18.04 bash  OpenJDK 8</description>
    </item>
    
  </channel>
</rss>
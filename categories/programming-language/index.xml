<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>programming language on Developer Playground</title>
    <link>https://devplayg.com/categories/programming-language/</link>
    <description>Recent content in programming language on Developer Playground</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Sun, 24 May 2020 09:00:04 +0900</lastBuildDate>
    
	<atom:link href="https://devplayg.com/categories/programming-language/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Go 원격 디버깅</title>
      <link>https://devplayg.com/tech/go_remote-debugging/</link>
      <pubDate>Sun, 24 May 2020 09:00:04 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/go_remote-debugging/</guid>
      <description>개발은 PC에서 실행은 Server에서  1. 개발 PC에서 Goland 설정 [Run] - [Run] - [Edit configuration] 선택
디버깅 환경 추가 디버깅 호스트(디버깅 대상 서버) 설정 호스트 이름만 입력; 아직 &amp;ldquo;Run&amp;rdquo; 실행하지 않음</description>
    </item>
    
    <item>
      <title>How to shutdown HTTP server in Go</title>
      <link>https://devplayg.com/tech/draft_go_http-server-down/</link>
      <pubDate>Sun, 24 May 2020 09:00:04 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/draft_go_http-server-down/</guid>
      <description>https://golang.org/pkg/net/http/#pkg-examples
package main import ( &amp;quot;context&amp;quot; &amp;quot;log&amp;quot; &amp;quot;net/http&amp;quot; &amp;quot;os&amp;quot; &amp;quot;os/signal&amp;quot; ) func main() { var srv http.Server idleConnsClosed := make(chan struct{}) go func() { sigint := make(chan os.Signal, 1) signal.Notify(sigint, os.</description>
    </item>
    
    <item>
      <title>Generating random number in Go</title>
      <link>https://devplayg.com/tech/go_rand/</link>
      <pubDate>Sun, 24 May 2020 09:00:00 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/go_rand/</guid>
      <description>https://github.com/grpc/grpc-go/blob/master/internal/grpcrand/grpcrand.go
package grpcrand import ( &amp;quot;math/rand&amp;quot; &amp;quot;sync&amp;quot; &amp;quot;time&amp;quot; ) var ( r = rand.New(rand.NewSource(time.Now().UnixNano())) mu sync.Mutex ) // Int63n implements rand.Int63n on the grpcrand global source. func Int63n(n int64) int64 { mu.</description>
    </item>
    
    <item>
      <title>Compiling C&#43;&#43; on Linux</title>
      <link>https://devplayg.com/tech/cpp_compiling-on-linux/</link>
      <pubDate>Tue, 03 Mar 2020 00:00:00 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/cpp_compiling-on-linux/</guid>
      <description>Checking GLIBC version on Linux system $ ldd --version ldd (Ubuntu GLIBC 2.27-3ubuntu1) 2.27  Hello World hello.cpp
#include &amp;lt;iostream&amp;gt; int main() { std::cout &amp;lt;&amp;lt; &amp;quot;Hello World\n&amp;quot;; }  $ g++ -o hello hello.</description>
    </item>
    
    <item>
      <title>Handling timezone in Spring Boot</title>
      <link>https://devplayg.com/tech/spring_boot-handling-timezone/</link>
      <pubDate>Wed, 28 Aug 2019 13:00:00 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/spring_boot-handling-timezone/</guid>
      <description>LocalDateTime vs ZonedDateTime
 LocalDateTime: Time based on system timezone ZonedDateTime: Time based on system or user-defined timezone
LocalDateTime.now(); // 2020-03-02T06:48:56.623993 ZonedDateTime.now(); // 2020-03-02T06:48:56.616338Z[Etc/UTC] ZonedDateTime.now().withZoneSameInstant(memberZone); // 2020-03-02T15:48:56.619674+09:00[Asia/Seoul] ZonedDateTime.now(memberZone); // 2020-03-02T15:48:56.622355+09:00[Asia/Seoul] LocalDateTime.</description>
    </item>
    
    <item>
      <title>Java Lambda</title>
      <link>https://devplayg.com/tech/java_lambda/</link>
      <pubDate>Thu, 25 Jul 2019 00:00:00 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/java_lambda/</guid>
      <description>Before using lamda
Collections.sort(logs, new Comparator&amp;lt;FaceRecognition&amp;gt;() { @Override public int compare(FaceRecognition o1, FaceRecognition o2) { Float f1 = o1.getScore(); Float f2 = o2.getScore(); return f2.compareTo(f1); } });  After using lamda</description>
    </item>
    
    <item>
      <title>Sprint Boot tips</title>
      <link>https://devplayg.com/tech/tips_spring-boot-dist/</link>
      <pubDate>Thu, 25 Jul 2019 00:00:00 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/tips_spring-boot-dist/</guid>
      <description>Building gradlew bootjar  Running Normal
java -jar client.jar  Profile: dev
java -Dspring.profiles.active=dev -jar client.jar  Systemd script [Unit] Description=My client After=syslog.target network.target mysql.service [Service] Type=simple User=devplayg Group=devplayg WorkingDirectory=/home/devplayg/client ExecStart=/usr/local/jdk/bin/java -Xms128m -Xmx256m -jar smartfactory.</description>
    </item>
    
    <item>
      <title>Sorting slices and user-defined collections in Go</title>
      <link>https://devplayg.com/tech/go_soring-slices/</link>
      <pubDate>Tue, 11 Jun 2019 22:02:31 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/go_soring-slices/</guid>
      <description>it couldn&amp;rsquo;t be better
https://golang.org/pkg/sort/
package main import ( &amp;quot;fmt&amp;quot; &amp;quot;sort&amp;quot; ) type Grams int func (g Grams) String() string { return fmt.Sprintf(&amp;quot;%dg&amp;quot;, int(g)) } type Organ struct { Name string Weight Grams } type Organs []*Organ func (s Organs) Len() int { return len(s) } func (s Organs) Swap(i, j int) { s[i], s[j] = s[j], s[i] } // ByName implements sort.</description>
    </item>
    
    <item>
      <title>Spring Boot 용어 - Servlet &amp; Servlet Container</title>
      <link>https://devplayg.com/tech/springboot_terms/</link>
      <pubDate>Sun, 09 Jun 2019 16:11:23 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/springboot_terms/</guid>
      <description>Spring Security 스프링 기반 어플리케이션의 인증과 권한을 담당하는 프레임워크 참고: https://sjh836.tistory.com/165
서블릿(Servlet)  서블릿은 Java 클래스이다. 서블릿은 [요청-응답 모델]를 처리하기 위해 만들어진 Java Server 의 기능을 확장하는데 사용되는 Java 클래스이다 서블릿은 클라이언트의 요청을 받고, 그 처리 결과를 다시 클라이언트에 전달한다.</description>
    </item>
    
    <item>
      <title>Go 언어</title>
      <link>https://devplayg.com/tech/go_what-is-go/</link>
      <pubDate>Sat, 08 Jun 2019 00:10:00 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/go_what-is-go/</guid>
      <description>Go 언어는? 안정적고 강력한 소프트웨어를 쉽게 만들 수 있는 오픈소스 프로그래밍 언어
&amp;ldquo;Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.</description>
    </item>
    
    <item>
      <title>Benchmarks with Go</title>
      <link>https://devplayg.com/tech/go_benchmark-test/</link>
      <pubDate>Fri, 07 Jun 2019 23:45:41 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/go_benchmark-test/</guid>
      <description>Benchmark test in Go hash_test.go
 Run code go test hash_test.go -bench .  Result
goos: windows goarch: amd64 BenchmarkFNV32-8 3000000 415 ns/op BenchmarkFNV64-8 3000000 426 ns/op BenchmarkFNV128-8 3000000 428 ns/op BenchmarkMD5-8 2000000 589 ns/op BenchmarkSHA1-8 2000000 708 ns/op BenchmarkSHA224-8 2000000 883 ns/op BenchmarkSHA256-8 2000000 854 ns/op BenchmarkSHA512-8 2000000 991 ns/op PASS ok command-line-arguments 17.</description>
    </item>
    
    <item>
      <title>Pseudo-random permutation of the integers in Go</title>
      <link>https://devplayg.com/tech/go_pseudo-random-permutation-of-the-integers-in-go/</link>
      <pubDate>Wed, 05 Jun 2019 21:34:36 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/go_pseudo-random-permutation-of-the-integers-in-go/</guid>
      <description>package main import ( &amp;quot;fmt&amp;quot; &amp;quot;math/rand&amp;quot; &amp;quot;time&amp;quot; ) func main() { rand.Seed(time.Now().UnixNano()) p := rand.Perm(100) for _, r := range p[:10] { fmt.Println(r) } }  </description>
    </item>
    
    <item>
      <title>Bash tips</title>
      <link>https://devplayg.com/tech/bash_tips/</link>
      <pubDate>Mon, 18 Mar 2019 21:34:36 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/bash_tips/</guid>
      <description> Get current directory DIR=&amp;quot;$( cd &amp;quot;$( dirname &amp;quot;${BASH_SOURCE[0]}&amp;quot; )&amp;quot; &amp;amp;&amp;amp; pwd )&amp;quot;  How to count number of files in each directory du -a | cut -d/ -f2 | sort | uniq -c | sort -nr  </description>
    </item>
    
  </channel>
</rss>
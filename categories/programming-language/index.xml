<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>programming language on Developer Playground</title>
    <link>https://devplayg.com/categories/programming-language/</link>
    <description>Recent content in programming language on Developer Playground</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Sat, 08 Jun 2019 00:10:00 +0900</lastBuildDate>
    
	<atom:link href="https://devplayg.com/categories/programming-language/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Go 언어</title>
      <link>https://devplayg.com/tech/go_what-is-go/</link>
      <pubDate>Sat, 08 Jun 2019 00:10:00 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/go_what-is-go/</guid>
      <description>Go 언어는? 안정적고 강력한 소프트웨어를 쉽게 만들 수 있는 오픈소스 프로그래밍 언어
 2007년에 Google은 Go의 디자인을 시작했고, 2009년에 공식적으로 공개함 초기 디자인부터 멀티코어, 네트워킹, 그리고 대형시스템에서 효율적으로 실행되도록 설계됨 정적 타이핑, 정적 런타임, 컴파일 언어임 가독성이 높고 사용하기 편함 고성능 네트워킹 및 멀티 프로세싱 처리에 적합함 C언어와 Syntax가 유사함 Garbage collection 기능이 있음,   Go의 아버지들 로버트 그리즈머 (Robert Griesemer)  Java hotspot compiler(JVM) 개발함 Chrome Javascript v8 엔진을 개발함  롭 파이크 (Rob Pike)  Plan 9 OS 개발함 UTF-8 을 아래 켄 톰슨과 같이 개발함 &amp;ldquo;Do not communicate by sharing memory; share memory by communicating.</description>
    </item>
    
    <item>
      <title>Go Benchmarks</title>
      <link>https://devplayg.com/tech/go_benchmark-test/</link>
      <pubDate>Fri, 07 Jun 2019 23:45:41 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/go_benchmark-test/</guid>
      <description>Benchmarks in Go Benchmarks are placed inside &amp;ldquo;_test.go&amp;rdquo; files
해시 알고리즘 성능을 측정하기 위한 코드 작성
hash_test.go
package test import ( &amp;quot;crypto/md5&amp;quot; &amp;quot;crypto/sha1&amp;quot; &amp;quot;crypto/sha256&amp;quot; &amp;quot;crypto/sha512&amp;quot; &amp;quot;hash&amp;quot; &amp;quot;hash/fnv&amp;quot; &amp;quot;log&amp;quot; &amp;quot;math/rand&amp;quot; &amp;quot;testing&amp;quot; ) const ( K = 1024 DataSize = 1 * K ) var data = make([]byte, DataSize) func init() { _, err := rand.</description>
    </item>
    
    <item>
      <title>Pseudo-random permutation of the integers in Go</title>
      <link>https://devplayg.com/tech/go_pseudo-random-permutation-of-the-integers-in-go/</link>
      <pubDate>Wed, 05 Jun 2019 21:34:36 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/go_pseudo-random-permutation-of-the-integers-in-go/</guid>
      <description>package main import ( &amp;quot;fmt&amp;quot; &amp;quot;math/rand&amp;quot; &amp;quot;time&amp;quot; ) func main() { rand.Seed(time.Now().UnixNano()) p := rand.Perm(100) for _, r := range p[:10] { fmt.Println(r) } }  </description>
    </item>
    
    <item>
      <title>Bash tips</title>
      <link>https://devplayg.com/tech/bash_tips/</link>
      <pubDate>Mon, 18 Mar 2019 21:34:36 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/bash_tips/</guid>
      <description> Get current directory DIR=&amp;quot;$( cd &amp;quot;$( dirname &amp;quot;${BASH_SOURCE[0]}&amp;quot; )&amp;quot; &amp;amp;&amp;amp; pwd )&amp;quot;  How to count number of files in each directory du -a | cut -d/ -f2 | sort | uniq -c | sort -nr  </description>
    </item>
    
  </channel>
</rss>
<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Developer Playground</title>
    <link>https://devplayg.com/</link>
    <description>Recent content on Developer Playground</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Mon, 19 Aug 2019 00:00:00 +0900</lastBuildDate>
    
	<atom:link href="https://devplayg.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>CURL tips</title>
      <link>https://devplayg.com/tech/curl_tips/</link>
      <pubDate>Mon, 19 Aug 2019 00:00:00 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/curl_tips/</guid>
      <description>파일 전송 curl -F &amp;quot;file=@nssm.exe&amp;quot; http://127.0.0.1/filestorage/uploadFile  여러 파일 전송 curl -F &amp;quot;files=@nssm.exe&amp;quot; -F &amp;quot;files=@c.txt&amp;quot; http://127.0.0.1/filestorage/uploadMultipleFiles curl -F &amp;quot;files[]=@nssm.exe&amp;quot; -F &amp;quot;files[]=@c.txt&amp;quot; http://127.0.0.1/filestorage/uploadMultipleFiles  파일과 파라메터 전송 curl -F &amp;quot;files=@nssm.exe&amp;quot; -F &amp;quot;event_type=3&amp;quot; http://127.</description>
    </item>
    
    <item>
      <title>Ubuntu 18.04 tips</title>
      <link>https://devplayg.com/tech/ubuntu-18.04_tips/</link>
      <pubDate>Mon, 19 Aug 2019 00:00:00 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/ubuntu-18.04_tips/</guid>
      <description>고정IP 설정 $ vi /etc/netplan/*.yaml --- network: version: 2 renderer: networkd ethernets: eno1: addresses: - 192.168.0.207/24 gateway4: 192.168.0.1 nameservers: addresses: [168.126.63.1,8.8.8.8] $ sudo netplan apply  UFW 설정 $ sudo ufw allow OpenSSH $ sudo ufw enable $ sudo ufw allow 8808/tcp $ sudo ufw allow 50000:50100/tcp $ sudo ufw status verbose  MariaDB 설치 https://downloads.</description>
    </item>
    
    <item>
      <title>Ubuntu 18.04, VXG Video Server 설치</title>
      <link>https://devplayg.com/tech/vxg-server_installation-on-ubuntu/</link>
      <pubDate>Sat, 10 Aug 2019 15:13:27 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/vxg-server_installation-on-ubuntu/</guid>
      <description>설치 버전  Ubuntu: 18.04 LTS VXG Server: 1.3.293 (2019-July-04)  영상이 저장될 디렉토리 생성 sudo mkdir -p /vxg/storage sudo mkdir -p /vxg/certificate sudo chown 755 -R /vxg sudo chown $USER:$USER -R /vxg  VXG Server 다운로드 https://dashboard.</description>
    </item>
    
    <item>
      <title>Windows 10, VXG Video Server 설치</title>
      <link>https://devplayg.com/tech/vxg-server_installation-on-windows/</link>
      <pubDate>Sat, 10 Aug 2019 15:13:27 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/vxg-server_installation-on-windows/</guid>
      <description>VXG Server 다운로드 Download
HTTPS 인증서 생성 (옵션) 생성 과정은 링크 참조
$ dir E:\vxg\certificate certificate.crt certificate.csr private.key  VXG Server 설치 $ start.bat -h 127.0.0.1 -c e:\vxg\certificate ... (생략) CREATE TRIGGER Writing output to /opt/skyvr/nginx/bin/skyvr_conf.</description>
    </item>
    
    <item>
      <title>Openssl, ROOT CA 인증서 생성</title>
      <link>https://devplayg.com/tech/openssl_generate-cert/</link>
      <pubDate>Fri, 09 Aug 2019 00:00:00 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/openssl_generate-cert/</guid>
      <description>CA가 사용할 RSA Key 생성 암호가 불필요한 경우
openssl genrsa -out private.key 2048  암호를 설정할 경우
openssl genrsa -aes256 -out private.key 2048  인증성 생성 openssl req -new -key private.</description>
    </item>
    
    <item>
      <title>Spring Boot, SSL 인증서 만들기</title>
      <link>https://devplayg.com/tech/spring-boot_ssl/</link>
      <pubDate>Fri, 02 Aug 2019 22:00:00 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/spring-boot_ssl/</guid>
      <description>Key store 생성 $ keytool -genkey -v -keystore sb201.key -alias sb201 -keyalg RSA -keysize 2048 -validity 3650 Enter keystore password: Re-enter new password: What is your first and last name?</description>
    </item>
    
    <item>
      <title>Java Lambda</title>
      <link>https://devplayg.com/tech/java_lambda/</link>
      <pubDate>Thu, 25 Jul 2019 00:00:00 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/java_lambda/</guid>
      <description>Before using lamda
Collections.sort(logs, new Comparator&amp;lt;FaceRecognition&amp;gt;() { @Override public int compare(FaceRecognition o1, FaceRecognition o2) { Float f1 = o1.getScore(); Float f2 = o2.getScore(); return f2.compareTo(f1); } });  After using lamda</description>
    </item>
    
    <item>
      <title>Sprint Boot tips</title>
      <link>https://devplayg.com/tech/tips_spring-boot-dist/</link>
      <pubDate>Thu, 25 Jul 2019 00:00:00 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/tips_spring-boot-dist/</guid>
      <description> Build gradlew bootjar  Run jar java -jar server-1.0.jar java -Dspring.profiles.active=server -jar myApp.jar  </description>
    </item>
    
    <item>
      <title>Thymeleaf tips</title>
      <link>https://devplayg.com/tech/tips_thymeleaf/</link>
      <pubDate>Thu, 25 Jul 2019 00:00:00 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/tips_thymeleaf/</guid>
      <description>A list of integers: intList = ${ {1, 2, 3, 4} }  A list of strings: strList = ${ {&#39;netgloo&#39;, &#39;web&#39;, &#39;design&#39;} } &amp;lt;div th:with=&amp;quot;strList = ${ {&#39;netgloo&#39;, &#39;web&#39;, &#39;design&#39;} }&amp;quot;&amp;gt; &amp;lt;ul&amp;gt; &amp;lt;li th:each=&amp;quot;s : ${strList}&amp;quot; th:text=&amp;quot;|${s}|&amp;quot;&amp;gt;&amp;lt;/li&amp;gt; &amp;lt;/ul&amp;gt; &amp;lt;/div&amp;gt;  Locales  &amp;lt;div th:text=&amp;quot;${#locale.</description>
    </item>
    
    <item>
      <title>Ubuntu 18.04 에 Kafka 설치</title>
      <link>https://devplayg.com/tech/kafka-on-ubuntu-18.04_installation/</link>
      <pubDate>Wed, 26 Jun 2019 13:10:00 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/kafka-on-ubuntu-18.04_installation/</guid>
      <description>요구사항  Kafka 2.12 OpenJDK 11.0.3 Ubuntu 18.04  환경 확인 시스템 정보 $ uname -a Linux kafka 4.15.0-52-generic #56-Ubuntu SMP Tue Jun 4 22:49:08 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux  OS 종류 확인 $ cat /etc/issue Ubuntu 18.</description>
    </item>
    
    <item>
      <title>아빠는 이렇게 생겼어요 (My dad looks like this)</title>
      <link>https://devplayg.com/lifeart/2019-06-26_dad/</link>
      <pubDate>Wed, 26 Jun 2019 06:39:05 +0900</pubDate>
      
      <guid>https://devplayg.com/lifeart/2019-06-26_dad/</guid>
      <description>지수가 드디어 아빠 그림도 그려줬다. ㅎㅎㅎ (내가 이렇게 생겼군 ^^; 흠..)</description>
    </item>
    
    <item>
      <title>엄마와 엄마 뱃 속에 있는 지수 (My mom looks like this)</title>
      <link>https://devplayg.com/lifeart/2019-06-26_mom/</link>
      <pubDate>Wed, 26 Jun 2019 06:39:05 +0900</pubDate>
      
      <guid>https://devplayg.com/lifeart/2019-06-26_mom/</guid>
      <description>지수가 엄마와 뱃속에 있는 자기 그림도 그렸다. 엄마 배가 조금 볼록한 이유가, 자기가 들어있어서란다. 대단한 디테일이다. 부모들이 다들 자기 딸은 천재인줄 안다는데, 나도 그렇다. 지수는 그림 천재인 것 같다.</description>
    </item>
    
    <item>
      <title>개구쟁이 오빠 (Brother)</title>
      <link>https://devplayg.com/lifeart/2019-06-24_brother/</link>
      <pubDate>Mon, 24 Jun 2019 05:39:05 +0900</pubDate>
      
      <guid>https://devplayg.com/lifeart/2019-06-24_brother/</guid>
      <description></description>
    </item>
    
    <item>
      <title>인어공주 시리즈(The Little Mermaid Series)</title>
      <link>https://devplayg.com/lifeart/2019-06-24_the-little-mermaid/</link>
      <pubDate>Mon, 24 Jun 2019 05:38:52 +0900</pubDate>
      
      <guid>https://devplayg.com/lifeart/2019-06-24_the-little-mermaid/</guid>
      <description></description>
    </item>
    
    <item>
      <title>슈퍼밴드, Still Fighting It</title>
      <link>https://devplayg.com/music/2019-06-22_supermand-still-fighting-it/</link>
      <pubDate>Sat, 22 Jun 2019 18:11:09 +0900</pubDate>
      
      <guid>https://devplayg.com/music/2019-06-22_supermand-still-fighting-it/</guid>
      <description>처음 듣는 곡인데, 들으면서 마음도 울고 눈도 울었다.
슈퍼밴드, 정말 멋진 프로그램이다.
Still fighting it
  </description>
    </item>
    
    <item>
      <title>아들과 딸</title>
      <link>https://devplayg.com/life/2019-06-18_diff_son_daughter/</link>
      <pubDate>Tue, 18 Jun 2019 23:59:11 +0900</pubDate>
      
      <guid>https://devplayg.com/life/2019-06-18_diff_son_daughter/</guid>
      <description>가끔 퇴근하고 집에 들어갈 때 간식을 사들고 들어가는데,
어느날은 산이와 수한테 간식을 주기 전에 장난삼아 질문을 해봤다.
&amp;quot;아빠가 좋아? 간식이 좋아?&amp;quot;  결과는 기대했던 것과 같았다.
산: (간식만 바라보고) 간식! 수: (간식을 바라보고) 아빠!</description>
    </item>
    
    <item>
      <title>산이의 빠마머리</title>
      <link>https://devplayg.com/life/2019-06-18_hair-perming/</link>
      <pubDate>Tue, 18 Jun 2019 23:49:43 +0900</pubDate>
      
      <guid>https://devplayg.com/life/2019-06-18_hair-perming/</guid>
      <description>지산이가 머리를 뽀글뽀글 머리를 했다. 녀석, 더 개구쟁이같다.
안그래도 학교생활을 들어보니, 이 녀석은 맨날 학교에서 뛰어다녀서
캠페인(&amp;ldquo;뛰지맙시다&amp;rdquo; 이런 푯말 들고 있는)한단다.
내가 학교에서는 담임선생님 말씀을 제일 잘 들어야 한다고 신신당부 했는데도</description>
    </item>
    
    <item>
      <title>Duplicate file finder in Go</title>
      <link>https://devplayg.com/tech/go_duplicate-file-finder/</link>
      <pubDate>Tue, 18 Jun 2019 22:39:49 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/go_duplicate-file-finder/</guid>
      <description>중복파일을 검색해서, 그 결과를 리턴해주는 코드를 Go 로 몇 줄 작성해서 Github repo 에 올려봤다. 처음에는 빌드 정도만 되도록 작성된 코드를 올렸다. 그런데, 다른 github 사용자들의 README.md 파일을 보니, 사용법도 잘 정리되어 있고, 훈장 같은 벳지들도 달려있지 않은가!</description>
    </item>
    
    <item>
      <title>MozJPEG 를 활용한 JPEG 압축 테스트 결과</title>
      <link>https://devplayg.com/tech/mozjpeg_image-optimizing-result/</link>
      <pubDate>Sun, 16 Jun 2019 14:25:34 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/mozjpeg_image-optimizing-result/</guid>
      <description>테스트 결과    압축 출처(라이브러리) 용량(Bytes) 품질(1~100) 공간절약비율 다운로드 링크     원본 1,030,997 - 0 % my-image.jpg   MozJPEG 989,923 100 4 % my-image_cjpeg-100.</description>
    </item>
    
    <item>
      <title>MozJPEG 를 활용한 JPEG 압축</title>
      <link>https://devplayg.com/tech/mozjpeg_image-optimizing/</link>
      <pubDate>Sun, 16 Jun 2019 14:24:39 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/mozjpeg_image-optimizing/</guid>
      <description>테스트 환경 Ubuntu 18.04 container on Docker
필수 라이브러리 설치 (Requirements) $ sudo apt-get update $ sudo apt-get install cmake autoconf automake libtool make pkg-config git nasm libpng-dev  소스파일 다운로드 (Download source) $ git clone https://github.</description>
    </item>
    
    <item>
      <title>Hugo tips</title>
      <link>https://devplayg.com/tech/hugo_tips/</link>
      <pubDate>Sun, 16 Jun 2019 14:21:11 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/hugo_tips/</guid>
      <description>Link {{&amp;lt; ref &amp;quot;document.md&amp;quot; &amp;gt;}} {{&amp;lt; ref &amp;quot;#anchor&amp;quot; &amp;gt;}} {{&amp;lt; ref &amp;quot;document.md#anchor&amp;quot; &amp;gt;}} {{&amp;lt; ref &amp;quot;/blog/my-post&amp;quot; &amp;gt;}} {{&amp;lt; ref &amp;quot;/blog/my-post.md&amp;quot; &amp;gt;}} {{&amp;lt; relref &amp;quot;document.md&amp;quot; &amp;gt;}} {{&amp;lt; relref &amp;quot;#anchor&amp;quot; &amp;gt;}} {{&amp;lt; relref &amp;quot;document.</description>
    </item>
    
    <item>
      <title>명령어로 토렌트 다운로드</title>
      <link>https://devplayg.com/tech/torrent_torrent-command-util/</link>
      <pubDate>Sun, 16 Jun 2019 13:11:09 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/torrent_torrent-command-util/</guid>
      <description>실행 환경 (Environment) Ubuntu 18.04
소스 다운로드 (Clone the git repository) Torrent Library (https://github.com/anacrolix/torrent)
$ go get github.com/anacrolix/torrent $ go get github.com/anacrolix/envpprof $ go get github.com/anacrolix/tagflag $ cd $GOPATH/src/github.com/anacrolix/torrent/cmd/torrent $ go build $ ls -l torrent -rwxr-xr-x 1 root root 17899680 Jun 14 00:55 torrent  토렌트 파일 다운로드 (Download .</description>
    </item>
    
    <item>
      <title>코딩 스타일의 변화</title>
      <link>https://devplayg.com/life/2019-06-12_changing/</link>
      <pubDate>Wed, 12 Jun 2019 22:08:34 +0900</pubDate>
      
      <guid>https://devplayg.com/life/2019-06-12_changing/</guid>
      <description>요즘 코딩 스타일을 한 번 바꿔보고 있다. 그런데, 거기서 얻는 배움이 생각보다 크다. 최근 Java 의 Spring Boot 를 깊게 접하면서 &amp;ldquo;우아한형제들&amp;rdquo;이란 회사의 기술블로그를 유심히 보게 되었는데, 그 중 &amp;ldquo;목적의식 있는 연습을 통한 효과적인 학습&amp;rdquo; 포스트를 읽은게 그 동기이다.</description>
    </item>
    
    <item>
      <title>레게음악</title>
      <link>https://devplayg.com/life/2019-06-11_raggae/</link>
      <pubDate>Tue, 11 Jun 2019 22:08:34 +0900</pubDate>
      
      <guid>https://devplayg.com/life/2019-06-11_raggae/</guid>
      <description>나는 음악을 참 좋아한다. 힙합, 재즈, 보사노바, 가요, 올드팝 등, 좋아하는 음악 장르도 다양하다. 그 중 하나는 레게음악이다. 나는 레게음악이 참 좋다. 자마이카 사람도 아닌데 말이다. 오늘은 Bob Marley의 Roots, Rock, Reggae 를 무한반복해서 들었다.</description>
    </item>
    
    <item>
      <title>Sorting slices and user-defined collections in Go</title>
      <link>https://devplayg.com/tech/go_soring-slices/</link>
      <pubDate>Tue, 11 Jun 2019 22:02:31 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/go_soring-slices/</guid>
      <description>it couldn&amp;rsquo;t be better
https://golang.org/pkg/sort/
package main import ( &amp;quot;fmt&amp;quot; &amp;quot;sort&amp;quot; ) type Grams int func (g Grams) String() string { return fmt.Sprintf(&amp;quot;%dg&amp;quot;, int(g)) } type Organ struct { Name string Weight Grams } type Organs []*Organ func (s Organs) Len() int { return len(s) } func (s Organs) Swap(i, j int) { s[i], s[j] = s[j], s[i] } // ByName implements sort.</description>
    </item>
    
    <item>
      <title>4. Kafka 테스트</title>
      <link>https://devplayg.com/tech/kafka-on-docker_test/</link>
      <pubDate>Tue, 11 Jun 2019 19:55:12 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/kafka-on-docker_test/</guid>
      <description>Kafka 상태확인 명령어 $ KAFKA_HOME/bin/kafka-topics.sh --bootstrap-server $KAFKA --list $ KAFKA_HOME/bin/kafka-topics.sh --bootstrap-server $KAFKA --describe --topic my-topic  Kafka 장애 발생 시, 상태변화 테스트 순차적 장애 발생 후, 순차적 복구
   Seq kafka1 kafka2 kafka3 설명     1 up up up 정상   2 up up down kafka3 장애 발생   3 up down down kafka2 장애 발생   4 up up down kafka2 장애 복구   5 up up up kafka3 장애 복구     Seq 1.</description>
    </item>
    
    <item>
      <title>Kafka tips</title>
      <link>https://devplayg.com/tech/kafka_tips/</link>
      <pubDate>Tue, 11 Jun 2019 18:55:12 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/kafka_tips/</guid>
      <description>Create topic $KAFKA_HOME/bin/kafka-topics.sh --bootstrap-server $KAFKA --replication-factor 3 --partitions 5 --topic my-topic --create  List topics $KAFKA_HOME/bin/kafka-topics.sh --bootstrap-server $KAFKA --list  Describe topic $KAFKA_HOME/bin/kafka-topics.sh --bootstrap-server $KAFKA --describe --topic my-topic  Delete topic $KAFKA_HOME/bin/kafka-topics.</description>
    </item>
    
    <item>
      <title>3. Kafka 설정</title>
      <link>https://devplayg.com/tech/kafka-on-docker_setting-kafka/</link>
      <pubDate>Sun, 09 Jun 2019 18:55:12 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/kafka-on-docker_setting-kafka/</guid>
      <description>Kafka 컨테이너 구성    호스트명 Broker ID IP     kafka1 1 172.17.0.5   kafka2 2 172.17.0.6   kafka3 3 172.17.0.7    컨테이너 개별 설정 디렉토리 생성</description>
    </item>
    
    <item>
      <title>Spring Boot 용어 - Servlet &amp; Servlet Container</title>
      <link>https://devplayg.com/tech/springboot_terms/</link>
      <pubDate>Sun, 09 Jun 2019 16:11:23 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/springboot_terms/</guid>
      <description>서블릿(Servlet)  서블릿은 Java 클래스이다. 서블릿은 [요청-응답 모델]를 처리하기 위해 만들어진 Java Server 의 기능을 확장하는데 사용되는 Java 클래스이다 서블릿은 클라이언트의 요청을 받고, 그 처리 결과를 다시 클라이언트에 전달한다. 서블릿은 다양한 요청방식에 응답할 수 있지만, 일반적으로 웹서버에 호스트 되어 있는 응용프로그램을 확장하는데 사용된다.</description>
    </item>
    
    <item>
      <title>2. Zookeeper 설정</title>
      <link>https://devplayg.com/tech/kafka-on-docker_setting-zookeepers/</link>
      <pubDate>Sun, 09 Jun 2019 15:55:12 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/kafka-on-docker_setting-zookeepers/</guid>
      <description>Zookeeper 컨테이너 구성    호스트명 ID IP     zoo1 1 172.17.0.2   zoo2 2 172.17.0.3   zoo3 3 172.17.0.4    컨테이너 공통 설정 Zookeeper 설정 vi /kafka/config/zookeeper.</description>
    </item>
    
    <item>
      <title>Mariadb tips</title>
      <link>https://devplayg.com/tech/mariadb_tips/</link>
      <pubDate>Sat, 08 Jun 2019 15:13:27 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/mariadb_tips/</guid>
      <description>Profiling SET GLOBAL general_log=&#39;ON&#39;; SET GLOBAL slow_query_log=&#39;ON&#39;; SET GLOBAL log_output=&#39;TABLE&#39;; SELECT * FROM mysql.general_log; truncate table mysql.general_log;  Change date to today DATE_ADD(create_date, INTERVAL DATEDIFF(NOW(), create_date) DAY)  Add account create user &#39;root&#39;@&#39;%&#39; identified by &#39;YOURPASSWORD&#39;; grant all privileges on *.</description>
    </item>
    
    <item>
      <title>Go 언어</title>
      <link>https://devplayg.com/tech/go_what-is-go/</link>
      <pubDate>Sat, 08 Jun 2019 00:10:00 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/go_what-is-go/</guid>
      <description>Go 언어는? 안정적고 강력한 소프트웨어를 쉽게 만들 수 있는 오픈소스 프로그래밍 언어
 2007년에 Google은 Go의 디자인을 시작했고, 2009년에 공식적으로 공개함 초기 디자인부터 멀티코어, 네트워킹, 그리고 대형시스템에서 효율적으로 실행되도록 설계됨 정적 타이핑, 정적 런타임, 컴파일 언어임 가독성이 높고 사용하기 편함 고성능 네트워킹 및 멀티 프로세싱 처리에 적합함 C언어와 Syntax가 유사함 Garbage collection 기능이 있음,   Go의 아버지들 로버트 그리즈머 (Robert Griesemer)  Java hotspot compiler(JVM) 개발함 Chrome Javascript v8 엔진을 개발함  롭 파이크 (Rob Pike)  Plan 9 OS 개발함 UTF-8 을 아래 켄 톰슨과 같이 개발함 &amp;ldquo;Do not communicate by sharing memory; share memory by communicating.</description>
    </item>
    
    <item>
      <title>Git tips</title>
      <link>https://devplayg.com/tech/git_tips/</link>
      <pubDate>Fri, 07 Jun 2019 23:45:41 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/git_tips/</guid>
      <description>To remove a submodule you need to:  Delete the relevant section from the .gitmodules file. Stage the .gitmodules changes git add .gitmodules Delete the relevant section from .git/config. Run git rm &amp;ndash;cached path_to_submodule (no trailing slash).</description>
    </item>
    
    <item>
      <title>Go Benchmarks</title>
      <link>https://devplayg.com/tech/go_benchmark-test/</link>
      <pubDate>Fri, 07 Jun 2019 23:45:41 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/go_benchmark-test/</guid>
      <description>Benchmarks in Go Benchmarks are placed inside &amp;ldquo;_test.go&amp;rdquo; files
해시 알고리즘 성능을 측정하기 위한 코드 작성
hash_test.go
package test import ( &amp;quot;crypto/md5&amp;quot; &amp;quot;crypto/sha1&amp;quot; &amp;quot;crypto/sha256&amp;quot; &amp;quot;crypto/sha512&amp;quot; &amp;quot;hash&amp;quot; &amp;quot;hash/fnv&amp;quot; &amp;quot;log&amp;quot; &amp;quot;math/rand&amp;quot; &amp;quot;testing&amp;quot; ) const ( K = 1024 DataSize = 1 * K ) var data = make([]byte, DataSize) func init() { _, err := rand.</description>
    </item>
    
    <item>
      <title>Docker tips</title>
      <link>https://devplayg.com/tech/docker_tips/</link>
      <pubDate>Fri, 07 Jun 2019 00:28:15 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/docker_tips/</guid>
      <description>Create docker container docker run -v e:/gohome:/gohome -it --name test ubuntu bash docker run -p 8000:8000 -v e:/gohome:/gohome -it --name test ubuntu bash  Update linux repository sed -i s#archive\.</description>
    </item>
    
    <item>
      <title>1. Kafka 설치를 위한 Docker 환경구성</title>
      <link>https://devplayg.com/tech/kafka-on-docker_installation/</link>
      <pubDate>Thu, 06 Jun 2019 17:14:41 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/kafka-on-docker_installation/</guid>
      <description>설치 버전  Docker Ubuntu 18.04
 Kafka 2.2 [Download] Zookeeper 3.4.13 OpenJDK 11.0.3
  Docker 컨테이너 구성    구분 호스트명 IP     Zookeeper zoo1 172.</description>
    </item>
    
    <item>
      <title>Markdown 의 미학</title>
      <link>https://devplayg.com/life/2019-06-06_markdown/</link>
      <pubDate>Thu, 06 Jun 2019 01:00:42 +0900</pubDate>
      
      <guid>https://devplayg.com/life/2019-06-06_markdown/</guid>
      <description>이전부터 Markdown 문서를 써오긴 했다. Github 에 코드를 올리면서 README.md 파일을 만들어야 했기에 반강제(?)로 써야만 했고, 그래서 심플하게만(두~세줄 정도) 사용했었다. 그런데 최근에, 회사에서 코드리뷰 자료나 기능 자료들을 Markdown 으로 작성해봤는데, 생각과 표현이 굉장히 명확하게 정리되는 느낌을 받았다.</description>
    </item>
    
    <item>
      <title>Pseudo-random permutation of the integers in Go</title>
      <link>https://devplayg.com/tech/go_pseudo-random-permutation-of-the-integers-in-go/</link>
      <pubDate>Wed, 05 Jun 2019 21:34:36 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/go_pseudo-random-permutation-of-the-integers-in-go/</guid>
      <description>package main import ( &amp;quot;fmt&amp;quot; &amp;quot;math/rand&amp;quot; &amp;quot;time&amp;quot; ) func main() { rand.Seed(time.Now().UnixNano()) p := rand.Perm(100) for _, r := range p[:10] { fmt.Println(r) } }  </description>
    </item>
    
    <item>
      <title>Bash tips</title>
      <link>https://devplayg.com/tech/bash_tips/</link>
      <pubDate>Mon, 18 Mar 2019 21:34:36 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/bash_tips/</guid>
      <description> Get current directory DIR=&amp;quot;$( cd &amp;quot;$( dirname &amp;quot;${BASH_SOURCE[0]}&amp;quot; )&amp;quot; &amp;amp;&amp;amp; pwd )&amp;quot;  How to count number of files in each directory du -a | cut -d/ -f2 | sort | uniq -c | sort -nr  </description>
    </item>
    
    <item>
      <title>Developer Playground</title>
      <link>https://devplayg.com/about/</link>
      <pubDate>Mon, 18 Mar 2019 21:34:36 +0900</pubDate>
      
      <guid>https://devplayg.com/about/</guid>
      <description>What makes me high Music, Coding, Walking, Thinking, Playing, Eating
What makes me down Life without what makes me high
Please tell me who you are.  iam := []byte(&amp;rdquo;devplayg&amp;rdquo;) Software engineer, especially Gopher  What&amp;rsquo;ve you been for a long time?</description>
    </item>
    
    <item>
      <title>2018 Music Awards</title>
      <link>https://devplayg.com/music/music_2018-awards/</link>
      <pubDate>Sun, 03 Mar 2019 17:14:41 +0900</pubDate>
      
      <guid>https://devplayg.com/music/music_2018-awards/</guid>
      <description>Bruno Mars - 24k Magic
Bruno Mars - Thats What I Like
Bruno Mars - The Lazy Song (Single Version)
Eric Clapton - I Shot The Sheriff (Live)
Fitz &amp;amp; The Tantrums - HandClap</description>
    </item>
    
    <item>
      <title>FFmpeg tips</title>
      <link>https://devplayg.com/tech/ffmpeg_tips/</link>
      <pubDate>Tue, 22 Jan 2019 00:09:12 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/ffmpeg_tips/</guid>
      <description>A complete, cross-platform solution to record, convert and stream audio and video. https://ffmpeg.org/
Concatenating files $ cat list.txt /tmp/file1.mp4 /tmp/file2.mp4 /tmp/file3.mp4 /tmp/file4.mp4 $ ffmpeg -f concat -i list.txt -c copy output.</description>
    </item>
    
  </channel>
</rss>
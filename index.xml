<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Developer Playground</title>
    <link>https://devplayg.com/</link>
    <description>Recent content on Developer Playground</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Tue, 11 Jun 2019 22:08:34 +0900</lastBuildDate>
    
	<atom:link href="https://devplayg.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Raggae</title>
      <link>https://devplayg.com/life/2019-06-11-raggae/</link>
      <pubDate>Tue, 11 Jun 2019 22:08:34 +0900</pubDate>
      
      <guid>https://devplayg.com/life/2019-06-11-raggae/</guid>
      <description>나는 레게음악을 참 좋아한다. 자마이카 사람도 아닌데 말이다. 오늘은 Bob Marley의 Roots, Rock, Reggae 를 무한반복해서 들었다.
 레게음악을 들으면 즐거우면서도 뭔가 짠한 느낌이 있다. 가사도 그런 경우가 많다. 아마, 슬픔을 즐거운 음악으로나마 위로하려는 레게발생지의 시대적, 문화적, 지리적 상황 등이 영향을 주지 않았나 싶다.</description>
    </item>
    
    <item>
      <title>Sorting slices and user-defined collections in Go</title>
      <link>https://devplayg.com/tech/go_soring-slices/</link>
      <pubDate>Tue, 11 Jun 2019 22:02:31 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/go_soring-slices/</guid>
      <description>it couldn&amp;rsquo;t be better
https://golang.org/pkg/sort/
package main import ( &amp;quot;fmt&amp;quot; &amp;quot;sort&amp;quot; ) type Grams int func (g Grams) String() string { return fmt.Sprintf(&amp;quot;%dg&amp;quot;, int(g)) } type Organ struct { Name string Weight Grams } type Organs []*Organ func (s Organs) Len() int { return len(s) } func (s Organs) Swap(i, j int) { s[i], s[j] = s[j], s[i] } // ByName implements sort.</description>
    </item>
    
    <item>
      <title>5. Kafka 테스트</title>
      <link>https://devplayg.com/tech/kafka_test/</link>
      <pubDate>Tue, 11 Jun 2019 19:55:12 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/kafka_test/</guid>
      <description>Kafka 상태확인 명령어 $KAFKA_HOME/bin/kafka-topics.sh --bootstrap-server $KAFKA --list $KAFKA_HOME/bin/kafka-topics.sh --bootstrap-server $KAFKA --describe --topic my-topic  Kafka 장애 발생 시, 상태변화 테스트 순차적 장애 발생 후, 순차적 복구
   Seq kafka1 kafka2 kafka3 설명     1 up up up 정상   2 up up down kafka3 장애 발생   3 up down down kafka2 장애 발생   4 up up down kafka2 장애 복구   5 up up up kafka3 장애 복구     Seq 1.</description>
    </item>
    
    <item>
      <title>4. Kafka 명령어</title>
      <link>https://devplayg.com/tech/kafka_tips/</link>
      <pubDate>Tue, 11 Jun 2019 18:55:12 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/kafka_tips/</guid>
      <description>토픽 생성 $KAFKA_HOME/bin/kafka-topics.sh --bootstrap-server $KAFKA --replication-factor 3 --partitions 5 --topic my-topic --create  토픽 목록 출력 $KAFKA_HOME/bin/kafka-topics.sh --bootstrap-server $KAFKA --list  토픽 상새정보 출력 $KAFKA_HOME/bin/kafka-topics.sh --bootstrap-server $KAFKA --describe --topic my-topic  토픽 삭제 $KAFKA_HOME/bin/kafka-topics.</description>
    </item>
    
    <item>
      <title>3. Kafka 설정</title>
      <link>https://devplayg.com/tech/kafka_setting-kafka/</link>
      <pubDate>Sun, 09 Jun 2019 18:55:12 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/kafka_setting-kafka/</guid>
      <description>Kafka 컨테이너 구성    호스트명 Broker ID IP     kafka1 1 172.17.0.5   kafka2 2 172.17.0.6   kafka3 3 172.17.0.7    컨테이너 개별 설정 디렉토리 생성</description>
    </item>
    
    <item>
      <title>Spring Boot 용어 - Servlet &amp; Servlet Container</title>
      <link>https://devplayg.com/tech/springboot_terms/</link>
      <pubDate>Sun, 09 Jun 2019 16:11:23 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/springboot_terms/</guid>
      <description>서블릿(Servlet)  서블릿은 Java 클래스이다. 서블릿은 [요청-응답 모델]를 처리하기 위해 만들어진 Java Server 의 기능을 확장하는데 사용되는 Java 클래스이다 서블릿은 클라이언트의 요청을 받고, 그 처리 결과를 다시 클라이언트에 전달한다. 서블릿은 다양한 요청방식에 응답할 수 있지만, 일반적으로 웹서버에 호스트 되어 있는 응용프로그램을 확장하는데 사용된다.</description>
    </item>
    
    <item>
      <title>2. Zookeeper 설정</title>
      <link>https://devplayg.com/tech/kafka_setting-zookeepers/</link>
      <pubDate>Sun, 09 Jun 2019 15:55:12 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/kafka_setting-zookeepers/</guid>
      <description>Zookeeper 컨테이너 구성    호스트명 ID IP     zoo1 1 172.17.0.2   zoo2 2 172.17.0.3   zoo3 3 172.17.0.4    컨테이너 공통 설정 Zookeeper 설정 vi /kafka/config/zookeeper.</description>
    </item>
    
    <item>
      <title>Mariadb profiling</title>
      <link>https://devplayg.com/tech/mariadb_profiling/</link>
      <pubDate>Sat, 08 Jun 2019 15:13:27 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/mariadb_profiling/</guid>
      <description> Set global variables SET GLOBAL general_log=&#39;ON&#39;; SET GLOBAL slow_query_log=&#39;ON&#39;; SET GLOBAL log_output=&#39;TABLE&#39;;  Profile SELECT * FROM mysql.general_log;  </description>
    </item>
    
    <item>
      <title>Go 언어</title>
      <link>https://devplayg.com/tech/go_what-is-go/</link>
      <pubDate>Sat, 08 Jun 2019 00:10:00 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/go_what-is-go/</guid>
      <description>Go 언어는? 안정적고 강력한 소프트웨어를 쉽게 만들 수 있는 오픈소스 프로그래밍 언어
 2007년에 Google은 Go의 디자인을 시작했고, 2009년에 공식적으로 공개함 초기 디자인부터 멀티코어, 네트워킹, 그리고 대형시스템에서 효율적으로 실행되도록 설계됨 정적 타이핑, 정적 런타임, 컴파일 언어임 가독성이 높고 사용하기 편함 고성능 네트워킹 및 멀티 프로세싱 처리에 적합함 C언어와 Syntax가 유사함 Garbage collection 기능이 있음,   Go의 아버지들 로버트 그리즈머 (Robert Griesemer)  Java hotspot compiler(JVM) 개발함 Chrome Javascript v8 엔진을 개발함  롭 파이크 (Rob Pike)  Plan 9 OS 개발함 UTF-8 을 아래 켄 톰슨과 같이 개발함 &amp;ldquo;Do not communicate by sharing memory; share memory by communicating.</description>
    </item>
    
    <item>
      <title>Git tips</title>
      <link>https://devplayg.com/tech/git_tips/</link>
      <pubDate>Fri, 07 Jun 2019 23:45:41 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/git_tips/</guid>
      <description>To remove a submodule you need to:  Delete the relevant section from the .gitmodules file. Stage the .gitmodules changes git add .gitmodules Delete the relevant section from .git/config. Run git rm &amp;ndash;cached path_to_submodule (no trailing slash).</description>
    </item>
    
    <item>
      <title>Go Benchmarks</title>
      <link>https://devplayg.com/tech/go_benchmark-test/</link>
      <pubDate>Fri, 07 Jun 2019 23:45:41 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/go_benchmark-test/</guid>
      <description>Benchmarks in Go Benchmarks are placed inside &amp;ldquo;_test.go&amp;rdquo; files
해시 알고리즘 성능을 측정하기 위한 코드 작성
hash_test.go
package test import ( &amp;quot;crypto/md5&amp;quot; &amp;quot;crypto/sha1&amp;quot; &amp;quot;crypto/sha256&amp;quot; &amp;quot;crypto/sha512&amp;quot; &amp;quot;hash&amp;quot; &amp;quot;hash/fnv&amp;quot; &amp;quot;log&amp;quot; &amp;quot;math/rand&amp;quot; &amp;quot;testing&amp;quot; ) const ( K = 1024 DataSize = 1 * K ) var data = make([]byte, DataSize) func init() { _, err := rand.</description>
    </item>
    
    <item>
      <title>Docker Tips</title>
      <link>https://devplayg.com/tech/docker_tips/</link>
      <pubDate>Fri, 07 Jun 2019 00:28:15 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/docker_tips/</guid>
      <description>Create docker container docker run -v e:/gohome:/gohome -it --name test ubuntu bash docker run -p 8000:8000 -v e:/gohome:/gohome -it --name test ubuntu bash  Update linux repository sed -i s#archive\.</description>
    </item>
    
    <item>
      <title>1. Kafka 설치를 위한 Docker 환경구성</title>
      <link>https://devplayg.com/tech/kafka_installation-on-docker/</link>
      <pubDate>Thu, 06 Jun 2019 17:14:41 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/kafka_installation-on-docker/</guid>
      <description>설치 버전  Docker Ubuntu 18.04
 Kafka 2.2 [Download] Zookeeper 3.4.13 OpenJDK 11.0.3
  Docker 컨테이너 구성    구분 호스트명 IP     Zookeeper zoo1 172.</description>
    </item>
    
    <item>
      <title>Markdown 의 미학</title>
      <link>https://devplayg.com/life/2019-06-06_markdown/</link>
      <pubDate>Thu, 06 Jun 2019 01:00:42 +0900</pubDate>
      
      <guid>https://devplayg.com/life/2019-06-06_markdown/</guid>
      <description>이전부터 Markdown 문서를 써오긴 했다. Github 에 코드를 올리면서 README.md 파일을 만들어야 했기에 반강제(?)로 써야만 했고, 그래서 심플하게만(두~세줄 정도) 사용했었다. 그런데 최근에, 회사에서 코드리뷰 자료나 기능 자료들을 Markdown 으로 작성해봤는데, 생각과 표현이 굉장히 명확하게 정리되는 느낌을 받았다.</description>
    </item>
    
    <item>
      <title>Pseudo-random permutation of the integers in Go</title>
      <link>https://devplayg.com/tech/go_pseudo-random-permutation-of-the-integers-in-go/</link>
      <pubDate>Wed, 05 Jun 2019 21:34:36 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/go_pseudo-random-permutation-of-the-integers-in-go/</guid>
      <description>package main import ( &amp;quot;fmt&amp;quot; &amp;quot;math/rand&amp;quot; &amp;quot;time&amp;quot; ) func main() { rand.Seed(time.Now().UnixNano()) p := rand.Perm(100) for _, r := range p[:10] { fmt.Println(r) } }  </description>
    </item>
    
    <item>
      <title>Bash tips</title>
      <link>https://devplayg.com/tech/bash_tips/</link>
      <pubDate>Mon, 18 Mar 2019 21:34:36 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/bash_tips/</guid>
      <description> Get current directory DIR=&amp;quot;$( cd &amp;quot;$( dirname &amp;quot;${BASH_SOURCE[0]}&amp;quot; )&amp;quot; &amp;amp;&amp;amp; pwd )&amp;quot;  How to count number of files in each directory du -a | cut -d/ -f2 | sort | uniq -c | sort -nr  </description>
    </item>
    
    <item>
      <title>Developer Playground</title>
      <link>https://devplayg.com/about/</link>
      <pubDate>Mon, 18 Mar 2019 21:34:36 +0900</pubDate>
      
      <guid>https://devplayg.com/about/</guid>
      <description>What makes me high Music, Coding, Walking, Thinking, Playing, Eating
What makes me down Life without what makes me high
Please tell me who you are.  iam := []byte(&amp;rdquo;devplayg&amp;rdquo;) Software engineer, especially Gopher  What&amp;rsquo;ve you been for a long time?</description>
    </item>
    
    <item>
      <title>2018 Music Awards</title>
      <link>https://devplayg.com/music/music_2018-awards/</link>
      <pubDate>Sun, 03 Mar 2019 17:14:41 +0900</pubDate>
      
      <guid>https://devplayg.com/music/music_2018-awards/</guid>
      <description>Bruno Mars - 24k Magic
Bruno Mars - Thats What I Like
Bruno Mars - The Lazy Song (Single Version)
Eric Clapton - I Shot The Sheriff (Live)
Fitz &amp;amp; The Tantrums - HandClap</description>
    </item>
    
    <item>
      <title>FFmpeg tips</title>
      <link>https://devplayg.com/tech/ffmpeg_tips/</link>
      <pubDate>Tue, 22 Jan 2019 00:09:12 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/ffmpeg_tips/</guid>
      <description>A complete, cross-platform solution to record, convert and stream audio and video. https://ffmpeg.org/
Concatenating files ffmpeg -f concat -i list.txt -c copy output.mp4  list.txt cat list.txt --- /tmp/file1.mp4 /tmp/file2.</description>
    </item>
    
  </channel>
</rss>
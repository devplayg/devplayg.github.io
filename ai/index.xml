<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ai on Developer Playground</title>
    <link>https://devplayg.com/ai/</link>
    <description>Recent content in Ai on Developer Playground</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Sun, 08 Mar 2020 00:00:00 +0900</lastBuildDate>
    
	<atom:link href="https://devplayg.com/ai/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>DeepStream Debug Mode</title>
      <link>https://devplayg.com/ai/draft_jetson-tx2-deepstream-debug-mode/</link>
      <pubDate>Sun, 08 Mar 2020 00:00:00 +0900</pubDate>
      
      <guid>https://devplayg.com/ai/draft_jetson-tx2-deepstream-debug-mode/</guid>
      <description>Enter this command
$ deepstream-app -c &amp;lt;config&amp;gt; --gst-debug=&amp;lt;debug#&amp;gt;   &amp;lt;config&amp;gt; is the pathname of the configuration file &amp;lt;debug#&amp;gt; is a number specifying the amount of detail in the debugging output  </description>
    </item>
    
    <item>
      <title>Jetson TX2 - Check system information</title>
      <link>https://devplayg.com/ai/jetson-tx2_system-info/</link>
      <pubDate>Thu, 27 Feb 2020 00:00:00 +0900</pubDate>
      
      <guid>https://devplayg.com/ai/jetson-tx2_system-info/</guid>
      <description>System Info System info
$ uname -a Linux devplayg-desktop 4.9.140-tegra #1 SMP PREEMPT Mon Dec 9 22:52:02 PST 2019 aarch64 aarch64 aarch64 GNU/Linux  OS
$ cat /etc/lsb-release DISTRIB_ID=Ubuntu DISTRIB_RELEASE=18.</description>
    </item>
    
    <item>
      <title>Jetson TX2 tips</title>
      <link>https://devplayg.com/ai/jetson-tx_tips/</link>
      <pubDate>Thu, 27 Feb 2020 00:00:00 +0900</pubDate>
      
      <guid>https://devplayg.com/ai/jetson-tx_tips/</guid>
      <description> RTSP Viewer RTSP_PATH=rtsp://id:pwd@1.1.1.1:3000/Streaming/Channels/101/ gst-launch-1.0 rtspsrc location=&amp;quot;$RTSP_PATH&amp;quot; latency=500 ! rtph264depay ! h264parse ! nvv4l2decoder enable-max-performance=1 ! nvoverlaysink overlay-x=800 overlay-y=50 overlay-w=640 overlay-h=480 overlay=2  </description>
    </item>
    
    <item>
      <title>잠이 안와서 테스트 해 본 HLS 스트리밍</title>
      <link>https://devplayg.com/ai/streaming_hls/</link>
      <pubDate>Wed, 04 Sep 2019 01:00:00 +0900</pubDate>
      
      <guid>https://devplayg.com/ai/streaming_hls/</guid>
      <description>캐냐AA 커피원두가 도착했다. 밤 10시에 라떼를 한 잔 마셨더니 잠이 안온다. 그래서 HLS 스트리밍 테스트를 했는데, 잘 된다. 헐.
Step 1. 동영상 분할을 위한 FFmpeg 4.x 설치 $ apt-get install software-properties-common $ add-apt-repository ppa:jonathonf/ffmpeg-4 $ apt install ffmpeg $ ffmpeg -version $ apt install libfaac-dev  Step 2.</description>
    </item>
    
    <item>
      <title>FFmpeg compiling on ubuntu 18.04</title>
      <link>https://devplayg.com/ai/ffmpeg_compile-on-ubuntu-18.04/</link>
      <pubDate>Sun, 01 Sep 2019 03:00:00 +0900</pubDate>
      
      <guid>https://devplayg.com/ai/ffmpeg_compile-on-ubuntu-18.04/</guid>
      <description>https://trac.ffmpeg.org/wiki/CompilationGuide/Ubuntu
mkdir -p ~/ffmpeg_sources ~/bin  Get the Dependencies apt -y install \ autoconf \ automake \ build-essential \ cmake \ git-core \ libass-dev \ libfreetype6-dev \ libsdl2-dev \ libtool \ libva-dev \ libvdpau-dev \ libvorbis-dev \ libxcb1-dev \ libxcb-shm0-dev \ libxcb-xfixes0-dev \ pkg-config \ texinfo \ wget \ zlib1g-dev apt install -y nasm yasm apt install -y libx264-dev libx265-dev libnuma-dev libvpx-dev libfdk-aac-dev libmp3lame-dev libopus-dev libavfilter-dev cd ~/ffmpeg_sources &amp;amp;&amp;amp; \ git -C aom pull 2&amp;gt; /dev/null || git clone --depth 1 https://aomedia.</description>
    </item>
    
    <item>
      <title>Go-Media-Framework installation on Ubuntu 18.04</title>
      <link>https://devplayg.com/ai/gmf_installation-on-ubuntu-18.04/</link>
      <pubDate>Sun, 01 Sep 2019 03:00:00 +0900</pubDate>
      
      <guid>https://devplayg.com/ai/gmf_installation-on-ubuntu-18.04/</guid>
      <description> Installing Go Set env export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:$HOME/ffmpeg_build/lib/pkgconfig/  Check
pkg-config --libs libavformat $ vi ~/.profile export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$HOME/ffmpeg_build/lib  Install go get github.com/3d0c/gmf  </description>
    </item>
    
  </channel>
</rss>
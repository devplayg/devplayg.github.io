<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ubuntu 18.04 on Developer Playground</title>
    <link>https://devplayg.com/tags/ubuntu-18.04/</link>
    <description>Recent content in ubuntu 18.04 on Developer Playground</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Wed, 01 Jan 2020 18:00:00 +0900</lastBuildDate>
    
	<atom:link href="https://devplayg.com/tags/ubuntu-18.04/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Installing and using Ubuntu 18.04 via Docker</title>
      <link>https://devplayg.com/tech/docker_pulling-ubuntu-18.04/</link>
      <pubDate>Wed, 01 Jan 2020 18:00:00 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/docker_pulling-ubuntu-18.04/</guid>
      <description>Pulling and run image in general
docker run -it --name ubt ubuntu:18.04 bash  with sharing filesystem
docker run -it -v /host/dir:/container/dir --name ubt ubuntu:18.04 bash  with binding container ports to the host</description>
    </item>
    
    <item>
      <title>Install &#34;SNMP Server&#34; on Windows 10 and Ubuntu 18.04</title>
      <link>https://devplayg.com/tech/snmp/</link>
      <pubDate>Sun, 03 Nov 2019 17:00:00 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/snmp/</guid>
      <description>1. Windows 10 Pro Run powershell as Administrator
Add-WindowsCapability -Online -Name “SNMP.Client~~~~0.0.1.0” Get-WindowsCapability -Online -Name “SNMP*”  Set Windows SNMP Trap Events
evntwin  Powershell commands to monitor windows. (Use &amp;ldquo;| ConvertTo-Json&amp;rdquo;) CPU</description>
    </item>
    
    <item>
      <title>잠이 안와서 테스트 해 본 HLS 스트리밍</title>
      <link>https://devplayg.com/ai/streaming_hls/</link>
      <pubDate>Wed, 04 Sep 2019 01:00:00 +0900</pubDate>
      
      <guid>https://devplayg.com/ai/streaming_hls/</guid>
      <description>캐냐AA 커피원두가 도착했다. 밤 10시에 라떼를 한 잔 마셨더니 잠이 안온다. 그래서 HLS 스트리밍 테스트를 했는데, 잘 된다. 헐.
Step 1. 동영상 분할을 위한 FFmpeg 4.x 설치 $ apt-get install software-properties-common $ add-apt-repository ppa:jonathonf/ffmpeg-4 $ apt install ffmpeg $ ffmpeg -version $ apt install libfaac-dev  Step 2.</description>
    </item>
    
    <item>
      <title>FFmpeg compiling on ubuntu 18.04</title>
      <link>https://devplayg.com/ai/ffmpeg_compile-on-ubuntu-18.04/</link>
      <pubDate>Sun, 01 Sep 2019 03:00:00 +0900</pubDate>
      
      <guid>https://devplayg.com/ai/ffmpeg_compile-on-ubuntu-18.04/</guid>
      <description>https://trac.ffmpeg.org/wiki/CompilationGuide/Ubuntu
mkdir -p ~/ffmpeg_sources ~/bin  Get the Dependencies apt -y install \ autoconf \ automake \ build-essential \ cmake \ git-core \ libass-dev \ libfreetype6-dev \ libsdl2-dev \ libtool \ libva-dev \ libvdpau-dev \ libvorbis-dev \ libxcb1-dev \ libxcb-shm0-dev \ libxcb-xfixes0-dev \ pkg-config \ texinfo \ wget \ zlib1g-dev apt install -y nasm yasm apt install -y libx264-dev libx265-dev libnuma-dev libvpx-dev libfdk-aac-dev libmp3lame-dev libopus-dev libavfilter-dev cd ~/ffmpeg_sources &amp;amp;&amp;amp; \ git -C aom pull 2&amp;gt; /dev/null || git clone --depth 1 https://aomedia.</description>
    </item>
    
    <item>
      <title>Go-Media-Framework installation on Ubuntu 18.04</title>
      <link>https://devplayg.com/ai/gmf_installation-on-ubuntu-18.04/</link>
      <pubDate>Sun, 01 Sep 2019 03:00:00 +0900</pubDate>
      
      <guid>https://devplayg.com/ai/gmf_installation-on-ubuntu-18.04/</guid>
      <description> Installing Go Set env export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:$HOME/ffmpeg_build/lib/pkgconfig/  Check
pkg-config --libs libavformat $ vi ~/.profile export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$HOME/ffmpeg_build/lib  Install go get github.com/3d0c/gmf  </description>
    </item>
    
    <item>
      <title>Ubuntu 18.04 tips</title>
      <link>https://devplayg.com/tech/ubuntu-18.04_tips/</link>
      <pubDate>Mon, 19 Aug 2019 00:00:00 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/ubuntu-18.04_tips/</guid>
      <description>Check network interfaces ls /sys/class/net --- eno1 eno2 lo  Configuration Static IP $ vi /etc/netplan/01-netcfg.yaml --- network: version: 2 renderer: networkd ethernets: eno1: addresses: - 192.168.0.207/24 gateway4: 192.168.0.1 nameservers: addresses: [168.</description>
    </item>
    
    <item>
      <title>Ubuntu 18.04, Kafka 설치</title>
      <link>https://devplayg.com/tech/kafka-on-ubuntu-18.04_installation/</link>
      <pubDate>Wed, 26 Jun 2019 13:10:00 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/kafka-on-ubuntu-18.04_installation/</guid>
      <description>요구사항  Kafka 2.12 OpenJDK 11.0.3 Ubuntu 18.04  환경 확인 시스템 정보 $ uname -a Linux kafka 4.15.0-52-generic #56-Ubuntu SMP Tue Jun 4 22:49:08 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux  OS 종류 확인 $ cat /etc/issue Ubuntu 18.</description>
    </item>
    
    <item>
      <title>MozJPEG 를 활용한 JPEG 압축 테스트 결과</title>
      <link>https://devplayg.com/tech/mozjpeg_image-optimizing-result/</link>
      <pubDate>Sun, 16 Jun 2019 14:25:34 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/mozjpeg_image-optimizing-result/</guid>
      <description>테스트 결과    압축 출처(라이브러리) 용량(Bytes) 품질(1~100) 공간절약비율 다운로드 링크     원본 1,030,997 - 0 % my-image.jpg   MozJPEG 989,923 100 4 % my-image_cjpeg-100.</description>
    </item>
    
    <item>
      <title>MozJPEG 를 활용한 JPEG 압축</title>
      <link>https://devplayg.com/tech/mozjpeg_image-optimizing/</link>
      <pubDate>Sun, 16 Jun 2019 14:24:39 +0900</pubDate>
      
      <guid>https://devplayg.com/tech/mozjpeg_image-optimizing/</guid>
      <description>테스트 환경 Ubuntu 18.04 container on Docker
필수 라이브러리 설치 (Requirements) $ sudo apt-get update $ sudo apt-get install cmake autoconf automake libtool make pkg-config git nasm libpng-dev  소스파일 다운로드 (Download source) $ git clone https://github.</description>
    </item>
    
    <item>
      <title> Ubuntu 18.04에서 Java jar를 Service로 실행하기</title>
      <link>https://devplayg.com/tech/run-java-jar-application-with-systemd-on-ubuntu-18.04/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devplayg.com/tech/run-java-jar-application-with-systemd-on-ubuntu-18.04/</guid>
      <description>Step1. 서비스 파일 생성 sudo vi /etc/systemd/system/smartfactory.service  smartfactory.service
[Unit] Description=Smart Factory client After=syslog.target network.target mysql.service [Service] Type=simple User=devplayg Group=devplayg WorkingDirectory=/home/devplayg/client ExecStart=/usr/local/jdk/bin/java -Xms128m -Xmx256m -jar smartfactory.jar Restart=on-failure RestartSec=10 [Install] WantedBy=multi-user.</description>
    </item>
    
  </channel>
</rss>
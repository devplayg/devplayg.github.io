<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Coding on Developer Playground</title>
    <link>https://devplayg.com/coding/</link>
    <description>Recent content in Coding on Developer Playground</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Mon, 21 Nov 2016 00:28:15 +0900</lastBuildDate>
    
	<atom:link href="https://devplayg.com/coding/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Design patterns</title>
      <link>https://devplayg.com/coding/design-pattern/</link>
      <pubDate>Mon, 21 Nov 2016 00:28:15 +0900</pubDate>
      
      <guid>https://devplayg.com/coding/design-pattern/</guid>
      <description> Design Patterns in GOF  Factory Factory Method Abstract Factory Builder Singleton Prototype   Adapter Proxy Facade Decorator Bridge Flyweight Composite   Strategy State Template Method Command Chain of Responsibility Observer Memento Mediator Visitor Iterator Interpreter  </description>
    </item>
    
    <item>
      <title>Design patterns</title>
      <link>https://devplayg.com/coding/design-pattern_solid-patterns/</link>
      <pubDate>Mon, 21 Nov 2016 00:28:15 +0900</pubDate>
      
      <guid>https://devplayg.com/coding/design-pattern_solid-patterns/</guid>
      <description>SOLID 패턴
 SR: Single Responsibility OC: Open/Closed LS: Liskov Substitution IS: Interface Segregation DI: Dependency Inversion  Single Responsibility(SRP)
 &amp;ldquo;should be open for extension, but closed for modification&amp;rdquo;  </description>
    </item>
    
    <item>
      <title>BaekJoon 1978 / 소수 찾기</title>
      <link>https://devplayg.com/coding/baekjoon-1978/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devplayg.com/coding/baekjoon-1978/</guid>
      <description>https://www.acmicpc.net/problem/1978
package main import ( &amp;quot;bufio&amp;quot; &amp;quot;fmt&amp;quot; &amp;quot;os&amp;quot; &amp;quot;strconv&amp;quot; &amp;quot;strings&amp;quot; ) func main() { var input int fmt.Scanf(&amp;quot;%d&amp;quot;, &amp;amp;input) if input &amp;lt; 0 || input &amp;gt; 100 { return } scanner := bufio.</description>
    </item>
    
  </channel>
</rss>